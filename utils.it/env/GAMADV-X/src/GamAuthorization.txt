GAM requires authorization to perform tasks on your domain; the tasks break down into two categories.
Tasks that manipulate objects in the domain: add a user, update a group, delete a class, share a printer.
Tasks that manipulate objects that belong to users: calendars, drive files, email.

An OAuth Client manipulates objects in the domain; the OAuth Client acts on its own behalf to perform the tasks.
A Service Account manipulates objects that belong to users; the Service Account acts on behalf of the user to perform the tasks.

There are three broad steps to set up GAM access.

1) In the Google Developers console, you specify a set of APIs that GAM will be able to use and you define an OAuth Client
and a Service Account. This produces two files: client_secrets.json for the OAuth Client and oauth2service.json for
the Service Account. Each of these files contain an ID that is used in the next step.

2) As a domain administrator, logged into your domain Admin Console, you grant the OAuth Client ID access to one set of scopes
and the Service Account ID access to a different set of scopes. Scopes identify an API and some or all of its functions.

3) While logged into your domain Admin Console, on your computer you run the command: gam oauth create
You select a list of scopes, GAM uses a browser to get final authorization from Google for the logged on admin user
for these scopes and GAM writes the authorization into the file oauth2.txt.
The browser authorization step is performed twice to circumvent a Google limitation.

You can generate multiple oauth2.txt files (with different names) authorizing different admins access to a different set of scopes.
You can verify the results of this step with the command: gam oauth info

